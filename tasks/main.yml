---
# Basic installation
- name: RoboZonky » user {{robozonky_user_name}} id {{robozonky_user_uid | default("automatic")}}
  user: name={{robozonky_user_name}} uid={{robozonky_user_uid | default(omit)}}
  when: robozonky_user_create == true
- name: RoboZonky » installation dir for {{robozonky_version}}
  file: path={{robozonky_path}} state=directory mode=700
  become_user: "{{robozonky_user_name}}"
- name: RoboZonky » data dir
  file: path={{robozonky_data_path}} state=directory mode=700
  become_user: "{{robozonky_user_name}}"
- name: Install RoboZonky {{robozonky_version}}
  unarchive:
    remote_src=yes
    src=https://repo1.maven.org/maven2/com/github/robozonky/distribution/robozonky-distribution-full/{{robozonky_version}}/robozonky-distribution-full-{{robozonky_version}}.zip
    dest={{robozonky_path}}
    creates={{robozonky_path}}/done
  become_user: "{{robozonky_user_name}}"
- name: Download RoboZonky CLI {{robozonky_version}}
  get_url:
    url=https://github.com/RoboZonky/robozonky/releases/download/robozonky-{{robozonky_version}}/robozonky-distribution-cli-{{robozonky_version}}-full.jar
    dest={{robozonky_path}}/robozonky-cli.jar
- name: RoboZonky » create done marker
  file: path={{robozonky_path}}/done state=directory
  become_user: "{{robozonky_user_name}}"
- name: RoboZonky CLI wrapper
  template: src=robozonky-cli.sh.j2 dest={{robozonky_path}}/robozonky-cli mode=700
  become_user: "{{robozonky_user_name}}"
- name: RoboZonky » log4j2.xml
  copy: src=log4j2.xml dest={{robozonky_path}}/log4j2.xml mode=600
  become_user: "{{robozonky_user_name}}"
  notify: restart RoboZonky
- name: RoboZonky » wrapper
  template: src=robozonky-exec.sh.j2 dest={{robozonky_path}}/robozonky-exec.sh mode=700
  become_user: "{{robozonky_user_name}}"
  notify: restart RoboZonky
- name: RoboZonky » other config files through templates
  template: src={{item}}.j2 dest={{robozonky_path}}/{{item}}
  loop:
    - robozonky.cli
    - robozonky.properties
  become_user: "{{robozonky_user_name}}"
  notify: restart RoboZonky

# Config
- name: robozonky-strategy.cfg » upload candidate
  copy: src={{robozonky_files_path}}/robozonky-strategy.cfg dest={{robozonky_path}}/robozonky-strategy-candidate.cfg mode=600
  become_user: "{{robozonky_user_name}}"
- name: robozonky-strategy.cfg » compare candidate and current strategy file
  command: diff {{robozonky_path}}/robozonky-strategy-candidate.cfg {{robozonky_path}}/robozonky-strategy.cfg
  failed_when: "robozonky_strategy_diff.rc > 1" # Do not fail just on different files
  register: robozonky_strategy_diff
  become_user: "{{robozonky_user_name}}"
- name: robozonky-strategy.cfg » validate candidate
  shell: 'echo | "{{robozonky_path}}/robozonky-cli" strategy-validator -l file://{{robozonky_path}}/robozonky-strategy-candidate.cfg'
  become_user: "{{robozonky_user_name}}"
  when: robozonky_strategy_diff.rc != 0
- name: robozonky-strategy.cfg » commit candidate
  shell: "cp {{robozonky_path}}/robozonky-strategy-candidate.cfg {{robozonky_path}}/robozonky-strategy.cfg.wip && sync && mv {{robozonky_path}}/robozonky-strategy.cfg.wip {{robozonky_path}}/robozonky-strategy.cfg"
  become_user: "{{robozonky_user_name}}"
  when: robozonky_strategy_diff.rc != 0
  notify: restart RoboZonky
- name: RoboZonky » other config files
  copy: src={{robozonky_files_path}}/{{item}} dest={{robozonky_path}}/{{item}} mode=600
  loop:
    - robozonky-notifications.cfg
  become_user: "{{robozonky_user_name}}"
  notify: restart RoboZonky

# Finalize
- name: RoboZonky » set current RoboZonky version
  file:
    src={{robozonky_path}}
    path={{robozonky_current_path}}
    state=link
  become_user: "{{robozonky_user_name}}"
  notify: restart RoboZonky
- name: RoboZonky » service
  template:
    src=robozonky.service.j2
    dest=/etc/systemd/system/robozonky.service
  notify: restart RoboZonky

# Login
- name: Check for authentication code
  fail:
    msg: "Please provide robozonky_zonky_auth_code. You can get the code at https://app.zonky.cz/api/oauth/authorize?client_id=robozonky&redirect_uri=https://app.zonky.cz/api/oauth/code&response_type=code&scope=SCOPE_APP_BASIC_INFO%20SCOPE_INVESTMENT_READ%20SCOPE_INVESTMENT_WRITE%20SCOPE_RESERVATIONS_READ%20SCOPE_RESERVATIONS_WRITE%20SCOPE_RESERVATIONS_SETTINGS_WRITE%20SCOPE_RESERVATIONS_SETTINGS_READ%20SCOPE_NOTIFICATIONS_READ%20SCOPE_NOTIFICATIONS_WRITE&state=dffdgdfg"
  when: '(robozonky_zonky_auth_code is not defined) or ((robozonky_zonky_auth_code|trim) == "")'
  become_user: "{{robozonky_user_name}}"
- name: Log in config file
  template: src=robozonky-login.cli.j2 dest={{robozonky_data_path}}/robozonky-login.cli mode=600
  become_user: "{{robozonky_user_name}}"
  notify: Log in
- name: Check for unsuccessful login attempt
  stat:
    path='{{robozonky_data_path}}/must-log-in'
  register: must_log_in_stat_result
  become_user: "{{robozonky_user_name}}"
- name: Force login if there is an unsuccessful login attempt
  file: # actually noop, but we have to do something
    path='{{robozonky_data_path}}/must-log-in'
    state=touch
  when: must_log_in_stat_result.stat.exists == True
  notify: Log in
